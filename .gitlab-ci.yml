stages:
  - test
  - deploy
  - report

cache:
  key: composer-cache
  paths:
    - .composer-cache/

.test:
  before_script:
    - php -v
    # install system packages
    - apt-get update && apt-get install -y git unzip
    # install extensions
    - if [ "$INSTALL_XDEBUG" -eq 1 ]; then pecl install xdebug; docker-php-ext-enable xdebug; fi
    # install composer
    - php -r "copy('https://composer.github.io/installer.sig', '/tmp/composer.sig');"
    - php -r "copy('https://getcomposer.org/installer', '/tmp/composer-setup.php');"
    - php -r '$expected = file_get_contents("/tmp/composer.sig"); $actual = hash_file("sha384", "/tmp/composer-setup.php"); exit(intval(!hash_equals($expected, $actual)));'
    - php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
    - chmod +x /usr/local/bin/composer
    - rm /tmp/composer-setup.php /tmp/composer.sig
    # cache dependencies
    - composer config -g cache-dir "$(pwd)/.composer-cache"
  script:
    # test on recommended
    - composer install
    - vendor/bin/phpunit
    # remove platform restrictions
    - composer config --unset platform
    # test on latest
    - composer update
    - vendor/bin/phpunit

# lowest version with the lowest dependencies
test-7.2-lowest:
  extends: .test
  stage: test
  image: php:7.2
  script:
    - composer update --prefer-lowest
    - vendor/bin/phpunit

# lowest version
test-7.2:
  extends: .test
  stage: test
  image: php:7.2

# latest 7
test-7:
  extends: .test
  stage: test
  image: php:7

# latest 8
test-8:
  extends: .test
  stage: test
  image: php:8

# coverage
coverage:
  variables:
    INSTALL_XDEBUG: 1
  extends: .test
  stage: deploy
  image: php:7.4
  script:
    - composer config --unset platform
    - composer update
    - XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover coverage.xml
    - bash <(curl -s https://codecov.io/bash)
  except:
    - tags

deploy:
  extends: .test
  image: php:7.2
  stage: deploy
  script:
    - curl -L --output /usr/local/bin/release-cli "https://release-cli-downloads.s3.amazonaws.com/latest/release-cli-linux-amd64"
    - chmod +x /usr/local/bin/release-cli
    - composer install
    - php -d phar.readonly=off vendor/bin/pake build
    - vendor/bin/pake upload
    - release-cli create --description "$CI_COMMIT_TAG" --tag-name "$CI_COMMIT_TAG" --assets-link "{\"name\":\"encryptor.phar\",\"url\":\"https://github.com/arokettu/php-encryptor/releases/download/$CI_COMMIT_TAG/encryptor.phar\"}"
  only:
    - tags
  except:
    - branches
